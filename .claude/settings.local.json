{
  "permissions": {
    "allow": [
      "Bash(git --version)",
      "Bash(git clone:*)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(npx prisma:*)",
      "Bash(PGPASSWORD=Q27G4B98 psql -h 149.50.148.198 -U postgres -d checkpoint_db -f prisma/migrations/20251016141828_add_multitenancy/migration.sql)",
      "Bash(PGPASSWORD=Q27G4B98 psql -h 149.50.148.198 -U postgres -d checkpoint_db -c \"UPDATE users SET superuser = true WHERE email = ''admin@checkpoint.com'';\")",
      "Bash(npm install)",
      "Bash(PGPASSWORD=Q27G4B98 psql -h 149.50.148.198 -U postgres -d checkpoint_db -c \"DELETE FROM journey_monitors; DELETE FROM journey_adjustments; DELETE FROM journey_locations; DELETE FROM checkpoints;\")",
      "Bash(PGPASSWORD=Q27G4B98 psql -h 149.50.148.198 -U postgres -d checkpoint_db -c \"SELECT ''journey_monitors'' as tabla, COUNT(*) as registros FROM journey_monitors UNION ALL SELECT ''journey_adjustments'', COUNT(*) FROM journey_adjustments UNION ALL SELECT ''journey_locations'', COUNT(*) FROM journey_locations UNION ALL SELECT ''checkpoints'', COUNT(*) FROM checkpoints;\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd multitenancy and novelties features, remove WebSocket functionality\n\n- Add Tenant model and multitenancy support across all models\n- Add Novelty and NoveltyType models for tracking employee requests\n- Remove WebSocket server and live monitoring features\n- Update API routes to support tenant isolation\n- Add migrations for multitenancy schema changes\n- Remove ws and @types/ws dependencies from package.json\n- Update Claude permissions in settings.local.json\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(npm run build:*)",
      "Bash(for file in src/app/api/novelties/[id]/attachments/route.ts src/app/api/novelties/route.ts src/app/api/novelty-types/route.ts src/app/api/users/route.ts)",
      "Bash(do)",
      "Bash(if grep -q \"const payload = await verifyToken(token)\" \"$file\")",
      "Bash(then)",
      "Bash(echo \"Processing $file\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(for file in src/app/api/tenants/route.ts src/app/api/mobile/places/route.ts)",
      "Bash(echo \"=== $file ===\")",
      "Bash(npx tsc:*)",
      "Bash(wait)",
      "Bash(echo:*)",
      "Bash(PGPASSWORD=Q27G4B98 psql -h 149.50.148.198 -U postgres -d checkpoint_db -f prisma/migrations/20251020144919_add_authorizes_novelties_to_user/migration.sql)",
      "Bash(npm install:*)",
      "Read(//home/martin/Desarrollos/Rendiciones/packages/web/**)",
      "Bash(md5sum:*)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(PGPASSWORD=Q27G4B98 psql:*)",
      "Bash(mkdir:*)",
      "Bash(cat:*)",
      "WebSearch",
      "Bash(while read f)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(ls:*)",
      "Bash(for dir in prisma/migrations/*/)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(/dev/null sleep 2 lsof -ti:3000)",
      "Bash(npm run dev:*)",
      "Bash(kill:*)",
      "Bash(chmod:*)",
      "Bash(./kill-port-3000.sh:*)",
      "Bash(ssh root@vps-5199621-x.vps.ovh.net \"cd /var/www/checkpoint-web && cat .env | grep DATABASE_URL\")",
      "Bash(git pull:*)",
      "Bash(dir \"C:\\Ex drive\\AXIOMA\\Checkpoint\\public\" /B)",
      "Bash(findstr:*)",
      "Bash(timeout /t 3 /nobreak)",
      "Bash(taskkill:*)",
      "Bash(netstat:*)",
      "Bash(tasklist:*)",
      "Bash(curl:*)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(npx tsx:*)",
      "Bash(timeout 180 npm run build)",
      "Bash(pkill:*)",
      "Bash(ESLINT_NO_DEV_ERRORS=true npx next build)",
      "Bash(killall:*)",
      "Bash(timeout 90 npm run build:*)",
      "Bash(node -e \"console.log(require(''crypto'').randomBytes(32).toString(''hex''))\")",
      "Bash(rm:*)",
      "Bash(timeout 120 npm run build)"
    ],
    "deny": [],
    "ask": []
  }
}
